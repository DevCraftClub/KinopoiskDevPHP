<?php

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤ KinopoiskDev
 * 
 * –≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç:
 * - –û–±—Ä–∞–±–æ—Ç–∫—É —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫
 * - –í–∞–ª–∏–¥–∞—Ü–∏—é –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
 * - –û–±—Ä–∞–±–æ—Ç–∫—É —Å–µ—Ç–µ–≤—ã—Ö –æ—à–∏–±–æ–∫
 * - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
 * - Graceful degradation
 */

require_once __DIR__ . '/../vendor/autoload.php';

use KinopoiskDev\Http\MovieRequests;
use KinopoiskDev\Http\PersonRequests;
use KinopoiskDev\Filter\MovieSearchFilter;
use KinopoiskDev\Filter\PersonSearchFilter;
use KinopoiskDev\Exceptions\KinopoiskDevException;
use KinopoiskDev\Exceptions\KinopoiskResponseException;
use KinopoiskDev\Exceptions\ValidationException;

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
if (!getenv('KINOPOISK_TOKEN')) {
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω API. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è KINOPOISK_TOKEN\n";
    exit(1);
}

echo "‚ö†Ô∏è  KinopoiskDev - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫\n";
echo "====================================\n\n";

try {
    $movieRequests = new \KinopoiskDev\Http\MovieRequests(useCache: true);
    $personRequests = new \KinopoiskDev\Http\PersonRequests(useCache: true);
    
    // 1. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ 404 - —Ñ–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω
    echo "üîç 1. –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∏–ª—å–º\n";
    echo "--------------------------------------------\n";
    
    try {
        $nonExistentMovie = $movieRequests->getMovieById(999999999);
        echo "‚úÖ –§–∏–ª—å–º –Ω–∞–π–¥–µ–Ω: {$nonExistentMovie->name}\n";
    } catch (KinopoiskResponseException $e) {
        echo "‚ùå –û—à–∏–±–∫–∞ API (–∫–æ–¥ {$e->getCode()}): {$e->getMessage()}\n";
        
        switch ($e->getCode()) {
            case 404:
                echo "üí° –§–∏–ª—å–º —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö\n";
                break;
            case 401:
                echo "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API —Ç–æ–∫–µ–Ω–∞\n";
                break;
            case 403:
                echo "üí° –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–µ—Å—É—Ä—Å—É\n";
                break;
            case 429:
                echo "üí° –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ\n";
                break;
            default:
                echo "üí° –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ API\n";
        }
    }
    
    echo "\n";

    // 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    echo "‚úÖ 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤\n";
    echo "----------------------------------------\n";
    
    try {
        $invalidFilter = new MovieSearchFilter();
        $invalidFilter->year(-1000) // –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥
                     ->withMinRating(-5, 'kp'); // –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥
        
        $results = $movieRequests->searchMovies($invalidFilter, 1, 5);
        echo "‚úÖ –ü–æ–∏—Å–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ\n";
    } catch (ValidationException $e) {
        echo "‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {$e->getMessage()}\n";
        
        if ($e->hasErrors()) {
            echo "üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–æ–∫:\n";
            foreach ($e->getErrors() as $field => $error) {
                echo "   - {$field}: {$error}\n";
            }
        }
    }
    
    echo "\n";

    // 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
    echo "üîç 3. –ü–æ–∏—Å–∫ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏\n";
    echo "----------------------------------------\n";
    
    try {
        $invalidSearchFilter = new PersonSearchFilter();
        $invalidSearchFilter->age(-10, 'gte') // –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç
                           ->searchByName(''); // –ü—É—Å—Ç–æ–µ –∏–º—è
        
        $results = $personRequests->searchPersons($invalidSearchFilter, 1, 5);
        echo "‚úÖ –ü–æ–∏—Å–∫ –ø–µ—Ä—Å–æ–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ\n";
    } catch (ValidationException $e) {
        echo "‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞: {$e->getMessage()}\n";
        
        if ($e->hasErrors()) {
            echo "üìã –û—à–∏–±–∫–∏ –≤ —Ñ–∏–ª—å—Ç—Ä–µ:\n";
            foreach ($e->getErrors() as $field => $error) {
                echo "   - {$field}: {$error}\n";
            }
        }
    }
    
    echo "\n";

    // 4. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ ID
    echo "üé¨ 4. –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å —Ñ–∏–ª—å–º —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º ID\n";
    echo "----------------------------------------------\n";
    
    $invalidIds = ['abc', -1, 0, 'invalid_id'];
    
    foreach ($invalidIds as $invalidId) {
        try {
            echo "üîç –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å —Ñ–∏–ª—å–º —Å ID: {$invalidId}\n";
            $movie = $movieRequests->getMovieById($invalidId);
            echo "‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω —Ñ–∏–ª—å–º: {$movie->name}\n";
        } catch (ValidationException $e) {
            echo "‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {$e->getMessage()}\n";
        } catch (KinopoiskResponseException $e) {
            echo "‚ùå –û—à–∏–±–∫–∞ API (–∫–æ–¥ {$e->getCode()}): {$e->getMessage()}\n";
        } catch (KinopoiskDevException $e) {
            echo "‚ùå –û—à–∏–±–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏: {$e->getMessage()}\n";
        }
        echo "\n";
    }
    
    echo "\n";

    // 5. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
    echo "üìÑ 5. –ü–∞–≥–∏–Ω–∞—Ü–∏—è —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏\n";
    echo "--------------------------------------------\n";
    
    $invalidPages = [-1, 0, 'abc', 999999];
    
    foreach ($invalidPages as $invalidPage) {
        try {
            echo "üìÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É: {$invalidPage}\n";
            $filter = new MovieSearchFilter();
            $filter->withMinRating(7.0, 'kp');
            
            $results = $movieRequests->searchMovies($filter, $invalidPage, 5);
            echo "‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {$results->total}\n";
        } catch (ValidationException $e) {
            echo "‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {$e->getMessage()}\n";
        } catch (KinopoiskResponseException $e) {
            echo "‚ùå –û—à–∏–±–∫–∞ API (–∫–æ–¥ {$e->getCode()}): {$e->getMessage()}\n";
        }
        echo "\n";
    }
    
    echo "\n";

    // 6. Graceful degradation - –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
    echo "üîÑ 6. Graceful degradation\n";
    echo "---------------------------\n";
    
    $movieIds = [301, 999999999, 326, 999999999, 328]; // –°–º–µ—Å—å –≤–∞–ª–∏–¥–Ω—ã—Ö –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö ID
    $successfulMovies = [];
    
    foreach ($movieIds as $index => $movieId) {
        try {
            $attemptNumber = $index + 1;
            echo "üîç –ü–æ–ø—ã—Ç–∫–∞ {$attemptNumber}: –ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∏–ª—å–º–∞ ID {$movieId}\n";
            $movie = $movieRequests->getMovieById($movieId);
            $successfulMovies[] = $movie;
            echo "‚úÖ –£—Å–ø–µ—à–Ω–æ: {$movie->name}\n";
        } catch (Exception $e) {
            echo "‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
            echo "üîÑ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É...\n";
        }
    }
    
    echo "\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ " . count($successfulMovies) . " –∏–∑ " . count($movieIds) . " —Ñ–∏–ª—å–º–æ–≤\n";
    
    if (!empty($successfulMovies)) {
        echo "‚úÖ –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã:\n";
        foreach ($successfulMovies as $movie) {
            echo "   ‚Ä¢ {$movie->name} ({$movie->year})\n";
        }
    }
    
    echo "\n";

    // 7. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
    echo "üîÑ 7. –ü–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö\n";
    echo "------------------------------------\n";
    
    $maxRetries = 3;
    $retryDelay = 1; // —Å–µ–∫—É–Ω–¥—ã
    
    for ($attempt = 1; $attempt <= $maxRetries; $attempt++) {
        try {
            echo "üîÑ –ü–æ–ø—ã—Ç–∫–∞ {$attempt} –∏–∑ {$maxRetries}\n";
            
            // –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –ø—Ä–æ–±–ª–µ–º–Ω—ã–π –∑–∞–ø—Ä–æ—Å
            $filter = new MovieSearchFilter();
            $filter->withMinRating(9.5, 'kp') // –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π —Ä–µ–π—Ç–∏–Ω–≥
                   ->withMinVotes(1000000, 'kp'); // –û—á–µ–Ω—å –º–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤
            
            $results = $movieRequests->searchMovies($filter, 1, 5);
            echo "‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {$results->total}\n";
            break; // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
            
        } catch (KinopoiskResponseException $e) {
            echo "‚ùå –û—à–∏–±–∫–∞ API (–∫–æ–¥ {$e->getCode()}): {$e->getMessage()}\n";
            
            if ($attempt < $maxRetries) {
                echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ {$retryDelay} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π...\n";
                sleep($retryDelay);
                $retryDelay *= 2; // –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
            } else {
                echo "üí• –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã. –û—à–∏–±–∫–∞: {$e->getMessage()}\n";
            }
        } catch (Exception $e) {
            echo "‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {$e->getMessage()}\n";
            break; // –ù–µ –ø–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –æ—à–∏–±–∫–∞—Ö
        }
    }
    
    echo "\n";

    // 8. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
    echo "üìù 8. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫\n";
    echo "------------------------\n";
    
    $errorLog = [];
    
    function logError($context, $error, $details = []) {
        global $errorLog;
        $errorLog[] = [
            'timestamp' => date('Y-m-d H:i:s'),
            'context' => $context,
            'error' => $error,
            'details' => $details
        ];
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –æ—à–∏–±–æ–∫
    $testScenarios = [
        'invalid_movie_id' => function() use ($movieRequests) {
            return $movieRequests->getMovieById(999999999);
        },
        'invalid_filter' => function() use ($movieRequests) {
            $filter = new MovieSearchFilter();
            $filter->year(-1000);
            return $movieRequests->searchMovies($filter, 1, 5);
        },
        'invalid_pagination' => function() use ($movieRequests) {
            $filter = new MovieSearchFilter();
            return $movieRequests->searchMovies($filter, -1, 5);
        }
    ];
    
    foreach ($testScenarios as $scenario => $testFunction) {
        try {
            echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {$scenario}\n";
            $result = $testFunction();
            echo "‚úÖ –£—Å–ø–µ—à–Ω–æ\n";
        } catch (ValidationException $e) {
            echo "‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {$e->getMessage()}\n";
            logError($scenario, 'ValidationException', [
                'message' => $e->getMessage(),
                'errors' => $e->hasErrors() ? $e->getErrors() : []
            ]);
        } catch (KinopoiskResponseException $e) {
            echo "‚ùå –û—à–∏–±–∫–∞ API: {$e->getMessage()}\n";
            logError($scenario, 'KinopoiskResponseException', [
                'code' => $e->getCode(),
                'message' => $e->getMessage()
            ]);
        } catch (Exception $e) {
            echo "‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {$e->getMessage()}\n";
            logError($scenario, 'Exception', [
                'message' => $e->getMessage(),
                'type' => get_class($e)
            ]);
        }
        echo "\n";
    }
    
    // –í—ã–≤–æ–¥–∏–º –ª–æ–≥ –æ—à–∏–±–æ–∫
    if (!empty($errorLog)) {
        echo "üìã –õ–æ–≥ –æ—à–∏–±–æ–∫:\n";
        foreach ($errorLog as $logEntry) {
            echo "   üìÖ {$logEntry['timestamp']} - {$logEntry['context']}: {$logEntry['error']}\n";
        }
    }
    
    echo "\n";

    // 9. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
    echo "üí¨ 9. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö\n";
    echo "--------------------------------------------\n";
    
    function getUserFriendlyError($exception) {
        if ($exception instanceof ValidationException) {
            return "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö";
        } elseif ($exception instanceof KinopoiskResponseException) {
            switch ($exception->getCode()) {
                case 401:
                    return "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å API —Ç–æ–∫–µ–Ω";
                case 403:
                    return "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏";
                case 404:
                    return "–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π —Ä–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω";
                case 429:
                    return "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ";
                default:
                    return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API";
            }
        } elseif ($exception instanceof KinopoiskDevException) {
            return "–û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏";
        } else {
            return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞";
        }
    }
    
    try {
        $movie = $movieRequests->getMovieById(999999999);
        echo "‚úÖ –§–∏–ª—å–º –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ\n";
    } catch (Exception $e) {
        $userMessage = getUserFriendlyError($e);
        echo "‚ùå {$userMessage}\n";
        echo "üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {$e->getMessage()}\n";
    }
    
    echo "\n";

    echo "‚úÖ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!\n";

} catch (KinopoiskDevException $e) {
    echo "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏: " . $e->getMessage() . "\n";
} catch (Exception $e) {
    echo "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
}

echo "\nüéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n"; 